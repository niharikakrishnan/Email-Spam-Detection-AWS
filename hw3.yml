AWSTemplateFormatVersion: 2010-09-09
Transform: "AWS::Serverless-2016-10-31"
Description: Cloud formation

Resources:

  S3BUCKET1:
    Type: 'AWS::S3::Bucket'
    Properties:
        BucketName: hwcloudabc

  BucketPolicy:
     Type: AWS::S3::BucketPolicy
     Properties:
       PolicyDocument:
         Version: 2012-10-17
         Statement:
             Effect: Allow
             Principal: '*'
             Action: '*'
             Resource: !Join
               - ''
               - - 'arn:aws:s3:::'
                 - !Ref S3BUCKET1
                 - /*
             Condition:
               StringLike:
                 'aws:Referer': '912884973146'
       Bucket: !Ref S3BUCKET1

  CheckSpamRole:
     Type: AWS::IAM::Role
     Properties:
       RoleName: "CheckSpamRole"
       AssumeRolePolicyDocument:
         Statement:
           - Action:
             - sts:AssumeRole
             Effect: Allow
             Principal:
               Service:
               - lambda.amazonaws.com
         Version: 2012-10-17
       ManagedPolicyArns:
         - arn:aws:iam::aws:policy/AWSLambdaExecute
         - arn:aws:iam::aws:policy/AmazonS3FullAccess
         - arn:aws:iam::aws:policy/AmazonSESFullAccess
         - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
         - arn:aws:iam::aws:policy/CloudWatchEventsFullAccess
       Path: /

  SesRuleSet:
    Type: 'AWS::SES::ReceiptRuleSet'
  sesrule:
    Type: 'AWS::SES::ReceiptRule'
    Properties:
      Rule:
        Actions:
          - S3Action:
              BucketName: !Ref S3BUCKET1
      RuleSetName: !Ref SesRuleSet



  CheckSpamLambda:
      Type: AWS::Lambda::Function
      Properties:
          Code:
              S3Bucket: 'cfcheckspamlambda'
              S3Key: 'checkspam.zip'
          Handler: lambda_function.lambda_handler
          Role: !GetAtt CheckSpamRole.Arn
          Runtime: python3.6
          Timeout: 300
          TracingConfig:
              Mode: Active
